{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chrib\\\\Dropbox\\\\Studium\\\\5. Bristol\\\\8.Software_Eng\\\\Github\\\\now-ui-kit-react-master\\\\src\\\\views\\\\examples\\\\MQTTclient.js\";\n// Create a client instance, we create a random id so the broker will allow multiple sessions\nimport React from \"react\"; // import jQuery from 'jquery';\n\nimport Paho from 'paho-mqtt';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Input, InputGroupAddon, InputGroupText, InputGroup, Col } from \"reactstrap\";\n\nclass Mqtt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mqttConnected: false,\n      page_name: '',\n      account_exists: false,\n      data_received: false,\n      //new challenge page\n      challenge_id: '',\n      challenge_name: '',\n      challenge_description: '',\n      challenge_step_goal: '',\n      challenge_end_date: '20-03-31',\n      challenge_reward: '',\n      challenges_loaded: false,\n      challenge_array: [],\n      //login/signup page\n      login_username: '',\n      is_sponsor: false,\n      redirect: false,\n      //ProfilePage\n      total_steps: -1,\n      remaining_sec: 0,\n      ranking: 8364,\n      user_challenges: [],\n      image_name: \"default-avatar.jpg\",\n      profile_type: 'user',\n      dummy_counter: 0 // used to calculate a dummy ranking\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.pushNewChallenge = this.pushNewChallenge.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  componentDidMount() {\n    this.client = new Paho.Client(\"broker.mqttdashboard.com\", 8000, \"clientId\" + this.makeid(3));\n    this.client.connect({\n      onSuccess: this.onConnect.bind(this)\n    });\n    this.client.onConnectionLost = this.onConnectionLost;\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  render() {\n    if (this.props.type === \"login\") {\n      return this.renderLogin();\n    }\n\n    if (this.props.type === \"sign-up\") {\n      return this.rendersignup();\n    }\n\n    if (this.props.type === \"profile\") {\n      return this.renderProfile();\n    }\n\n    if (this.props.type === \"challenges\") {\n      return this.renderGetChallenges();\n    }\n\n    if (this.props.type === \"set-challenge\") {\n      return this.renderSetChallenge();\n    }\n  }\n\n  renderProfile() {\n    if (this.state.mqttConnected === true) {\n      this.requestProfile();\n    }\n\n    if (this.state.user_challenges.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        align: \"middle\",\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Loading...\"), React.createElement(\"iframe\", {\n        style: {\n          position: \"relative\",\n          top: 0,\n          left: 0,\n          width: 1080,\n          height: 640\n        },\n        src: \"https://www.youtube.com/embed/1svA2sGhDEE\",\n        align: \"middle\",\n        title: \"Pink Windmill Kids\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile_photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"...\",\n        src: process.env.PUBLIC_URL + '/img/' + this.state.image_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: event => this.handleImgChange('image_name', event),\n        id: \"choices\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"default-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Default\"), React.createElement(\"option\", {\n        value: \"virus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Quentin Quarantino\"), React.createElement(\"option\", {\n        value: \"skull\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Skully\"), React.createElement(\"option\", {\n        value: \"octo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Dr Octo\"), React.createElement(\"option\", {\n        value: \"penguin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Very Happy Feet\"), React.createElement(\"a\", {\n        href: \"https://www.freepik.com/free-photos-vectors/christmas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Christmas vector created by rawpixel.com - www.freepik.com\"), React.createElement(\"a\", {\n        href: \"https://www.freepik.com/free-photos-vectors/pattern\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Pattern vector created by vectorpocket - www.freepik.com\"), React.createElement(\"a\", {\n        href: \"https://www.freepik.com/free-photos-vectors/hand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Hand vector created by sergey_kandakov - www.freepik.com\"), React.createElement(\"a\", {\n        href: \"https://www.freepik.com/free-photos-vectors/green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Green photo created by crowf - www.freepik.com\"))), React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, global.userName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        className: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"My Stats\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"social-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.total_steps), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Steps\")), React.createElement(\"div\", {\n        className: \"social-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.remaining_sec), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Seconds Lifetime\")), React.createElement(\"div\", {\n        className: \"social-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"#\", this.state.ranking), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Ranking\"))), React.createElement(\"h3\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"My Challenges\"), React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"middle\",\n        class: \"tg-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"ccp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.user_challenges.map(listitem => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, listitem.challenge_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, listitem.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, listitem.step_goal), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, listitem.end_time), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, listitem.reward)))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    }\n  }\n\n  createNewProfile() {\n    console.log(\"Creating new profile...\");\n    var newRequest = {\n      type: \"push new profile\",\n      user_name: global.userName,\n      user_type: this.state.profile_type\n    };\n    this.requestToServer(JSON.stringify(newRequest));\n  }\n\n  requestProfile() {\n    if (this.state.total_steps !== 0) {\n      this.wait(1000);\n    }\n\n    console.log(\"Requesting profile...\");\n    var newRequest = {\n      type: \"pull web profile\",\n      user_name: global.userName\n    };\n    this.requestToServer(JSON.stringify(newRequest));\n  }\n\n  rendersignup() {\n    if (this.state.page_name !== 'sign-up') {\n      this.setState({\n        page_name: 'sign-up'\n      });\n    }\n\n    return React.createElement(Col, {\n      className: \"text-center ml-auto mr-auto\",\n      lg: \"6\",\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"now-ui-icons users_circle-08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"User Name...\",\n      type: \"text\",\n      value: this.state.login_username,\n      onChange: event => this.loginChange('login_username', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.is_sponsor,\n      onChange: event => this.handleCheckBox('is_sponsor', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), \" I am a sponsor\", React.createElement(\"div\", {\n      className: \"send-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.redirectToProfile(), React.createElement(Button, {\n      block: true,\n      className: \"btn-round\",\n      color: \"info\",\n      size: \"lg\",\n      onClick: this.handleLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Sign up now\"), React.createElement(\"div\", {\n      className: \"pull-middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"link\",\n      href: \"/login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Login to existing Account\")))));\n  }\n\n  redirectToProfile() {\n    if (this.state.mqttConnected === true && this.state.data_received === true) {\n      if (this.state.page_name === 'login') {\n        console.log(\"we're on the login page\");\n\n        if (this.state.account_exists === true) {\n          console.log(\"redirect changed to true\");\n          this.setState({\n            redirect: true\n          });\n        }\n\n        if (this.state.account_exists === false) {\n          this.setState({\n            redirect: false\n          });\n        }\n      }\n\n      if (this.state.page_name === 'sign-up') {\n        console.log(\"we're on the sign up page\");\n\n        if (this.state.account_exists === true) {\n          this.setState({\n            redirect: false\n          });\n        }\n\n        if (this.state.account_exists === false) {\n          this.createNewProfile();\n          this.setState({\n            redirect: true\n          });\n        }\n      }\n    }\n\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/profile-page'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      });\n    }\n  }\n\n  handleLogin() {\n    this.requestProfile();\n  }\n\n  loginChange(type, event) {\n    this.setState({\n      [type]: event.target.value\n    });\n    global.userName = event.target.value;\n  }\n\n  handleChange(type, event) {\n    this.setState({\n      [type]: event.target.value\n    });\n    console.log('type is: ' + type + ' and value is ' + event.target.value);\n  }\n\n  handleCheckBox(type, event) {\n    this.setState({\n      [type]: event.target.checked\n    });\n    console.log('type is: ' + type + ' and value is ' + event.target.checked);\n  }\n\n  handleImgChange(type, event) {\n    this.setState({\n      [type]: event.target.value + '.jpg'\n    });\n    console.log('type is: ' + type + ' and value is ' + event.target.value);\n  }\n\n  renderLogin() {\n    if (this.state.page_name !== 'login') {\n      this.setState({\n        page_name: 'login'\n      });\n    }\n\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"now-ui-icons users_circle-08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"User Name...\",\n      type: \"text\",\n      value: this.state.login_username,\n      onChange: event => this.loginChange('login_username', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"now-ui-icons text_caps-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Password...\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), this.redirectToProfile(), React.createElement(Button, {\n      block: true,\n      className: \"btn-round\",\n      color: \"info\",\n      onClick: this.handleLogin.bind(this),\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"    Login\"));\n  }\n\n  requestChallenges() {\n    console.log(\"Requesting challenges...\");\n    var newRequest1 = {\n      type: \"pull all challenges\"\n    };\n    this.requestToServer(JSON.stringify(newRequest1));\n  }\n\n  renderGetChallenges() {\n    if (this.state.mqttConnected === true && this.state.challenges_loaded === false) {\n      this.requestChallenges();\n      this.setState({\n        challenges_loaded: true\n      });\n    }\n\n    if (this.state.challenge_array.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \" \", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \" Loading challenges... \"), \" \");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"middle\",\n        class: \"tg-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"ccp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Step Goal\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"End Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Reward\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })), this.state.challenge_array.map(listitem => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, listitem.challenge_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, listitem.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, listitem.step_goal), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, listitem.end_time), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, listitem.reward), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"submit-button\",\n        onClick: event => this.pushSelectedChallenge(event, listitem.challenge_id),\n        variant: \"outlined\",\n        size: \"large\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Accept Challenge\")))))));\n    }\n  }\n\n  pushSelectedChallenge(event, id) {\n    var selectedChallenge = {\n      type: \"push select challenge\",\n      user_name: global.userName,\n      challenge_id: id\n    };\n    this.requestToServer(JSON.stringify(selectedChallenge));\n    alert(\"You successfully joined this challenge\");\n  }\n\n  renderSetChallenge() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      align: \"left\",\n      onSubmit: this.validateChallengeInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Challenge Name:  \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.challenge_name,\n      onChange: event => this.handleChange('challenge_name', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Description:  \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"challenge-textfield\",\n      value: this.state.challenge_description,\n      onChange: event => this.handleChange('challenge_description', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"End Date: \"), React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.challenge_end_date,\n      onChange: event => this.handleChange('challenge_end_date', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Step Goal: \"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.challenge_step_goal,\n      onChange: event => this.handleChange('challenge_step_goal', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"User Reward: \"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.challenge_reward,\n      onChange: event => this.handleChange('challenge_reward', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Create Challenge\")));\n  }\n\n  validateChallengeInput(event) {\n    event.preventDefault();\n\n    if (this.state.challenge_name === '' || this.state.challenge_description === '' || this.state.challenge_reward === '' || this.state.challenge_step_goal === '') {\n      alert(\"Please complete all fields\");\n    } else if (this.state.challenge_reward >= 0 && this.state.challenge_step_goal >= 0) {\n      this.pushNewChallenge(event);\n    } else {\n      alert(\"Please enter positive numbers\");\n    }\n  }\n\n  pushNewChallenge(event) {\n    console.log(JSON.stringify(this.state.challenge_name));\n    console.log(\"Pushing New Challenge\");\n    var today = new Date(),\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + 'T' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds() + '.' + today.getMilliseconds() + 'Z';\n    var newChallenge = {\n      type: \"push new challenge\",\n      challenge_id: \"C\" + this.makeid(6),\n      challenge_name: this.state.challenge_name,\n      description: this.state.challenge_description,\n      end_time: this.state.challenge_end_date,\n      step_goal: this.state.challenge_step_goal,\n      reward: this.state.challenge_reward,\n      current_time: date\n    };\n    this.requestToServer(JSON.stringify(newChallenge));\n    alert(\"You successfully created a new challenge\");\n  } // called when the client connects\n\n\n  onConnect() {\n    // Once a connection has been made report.\n    console.log(\"Connected\");\n    this.setState({\n      mqttConnected: true\n    }); // this.state.mqttConnected = true;\n  } // called when the client connects\n\n\n  requestToServer(payload) {\n    // Once a connection has been made, make a subscription and send a message.\n    console.log(\"Request to server\");\n    this.client.subscribe(\"doordie_web\");\n    var message = new Paho.Message(payload);\n    message.destinationName = \"doordie_web\";\n    this.client.send(message);\n  } // called to generate the IDs\n\n\n  makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  } // called when the client loses its connection\n\n\n  onConnectionLost(responseObject) {\n    if (responseObject.errorCode !== 0) {\n      console.log(\"Mqtt.onConnectionLost:\" + responseObject.errorMessage);\n    }\n  } // called when a message arrives\n\n\n  onMessageArrived(message) {\n    console.log(\"Mgtt.onMessageArrived:\" + message.payloadString);\n    var json_message = JSON.parse(message.payloadString);\n\n    if (json_message.type === 'push all challenges') {\n      console.log(\"attempt to get array\");\n      this.setState({\n        challenge_array: json_message.challenge\n      });\n    }\n\n    if (json_message.type === 'push web profile' && json_message.user_name === global.userName) {\n      console.log(\"HELLLO\");\n      console.log(json_message.hasOwnProperty(\"total_steps\"));\n      this.setState({\n        total_steps: json_message.total_steps,\n        remaining_sec: json_message.remaining_sec,\n        account_exists: json_message.hasOwnProperty(\"total_steps\"),\n        data_received: true,\n        user_challenges: json_message.challenge,\n        profile_type: json_message.user_type,\n        ranking: Math.max(1, Math.round(8378 - json_message.total_steps + this.state.dummy_counter / 3, 0)),\n        //dummy formula: so that it looks like your ranking changes when the step count goes up\n        dummy_counter: this.state.dummy_counter + 1\n      });\n    }\n  } //wait function called after sever request, to avoid spaming the server\n\n\n  wait(ms) {\n    var start = new Date().getTime();\n    var end = start;\n\n    while (end < start + ms) {\n      end = new Date().getTime();\n    }\n  }\n\n}\n\nexport default Mqtt;","map":{"version":3,"sources":["C:/Users/chrib/Dropbox/Studium/5. Bristol/8.Software_Eng/Github/now-ui-kit-react-master/src/views/examples/MQTTclient.js"],"names":["React","Paho","Redirect","Button","Input","InputGroupAddon","InputGroupText","InputGroup","Col","Mqtt","Component","constructor","props","state","mqttConnected","page_name","account_exists","data_received","challenge_id","challenge_name","challenge_description","challenge_step_goal","challenge_end_date","challenge_reward","challenges_loaded","challenge_array","login_username","is_sponsor","redirect","total_steps","remaining_sec","ranking","user_challenges","image_name","profile_type","dummy_counter","handleChange","bind","pushNewChallenge","onMessageArrived","componentDidMount","client","Client","makeid","connect","onSuccess","onConnect","onConnectionLost","render","type","renderLogin","rendersignup","renderProfile","renderGetChallenges","renderSetChallenge","requestProfile","length","position","top","left","width","height","process","env","PUBLIC_URL","event","handleImgChange","global","userName","map","listitem","description","step_goal","end_time","reward","createNewProfile","console","log","newRequest","user_name","user_type","requestToServer","JSON","stringify","wait","setState","loginChange","handleCheckBox","redirectToProfile","handleLogin","pathname","target","value","checked","requestChallenges","newRequest1","pushSelectedChallenge","id","selectedChallenge","alert","validateChallengeInput","preventDefault","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","newChallenge","current_time","payload","subscribe","message","Message","destinationName","send","result","characters","charactersLength","i","charAt","Math","floor","random","responseObject","errorCode","errorMessage","payloadString","json_message","parse","challenge","hasOwnProperty","max","round","ms","start","getTime","end"],"mappings":"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","sourcesContent":["// Create a client instance, we create a random id so the broker will allow multiple sessions\r\nimport React from \"react\";\r\n// import jQuery from 'jquery';\r\nimport Paho from 'paho-mqtt';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nclass Mqtt extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        mqttConnected: false,\r\n        page_name: '',\r\n        account_exists: false,\r\n        data_received: false,\r\n      //new challenge page\r\n        challenge_id: '',\r\n        challenge_name: '',\r\n        challenge_description: '',\r\n        challenge_step_goal: '',\r\n        challenge_end_date: '20-03-31',\r\n        challenge_reward: '',\r\n        challenges_loaded: false,\r\n        challenge_array: [],\r\n      //login/signup page\r\n        login_username: '',\r\n        is_sponsor: false,\r\n        redirect: false,\r\n      //ProfilePage\r\n        total_steps: -1,\r\n        remaining_sec: 0,\r\n        ranking: 8364,\r\n        user_challenges: [],\r\n        image_name: \"default-avatar.jpg\",\r\n        profile_type: 'user',\r\n        dummy_counter: 0, // used to calculate a dummy ranking\r\n\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.pushNewChallenge = this.pushNewChallenge.bind(this);\r\n    this.onMessageArrived = this.onMessageArrived.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.client = new Paho.Client(\"broker.mqttdashboard.com\", 8000, \"clientId\" + this.makeid(3) );\r\n    this.client.connect({onSuccess: this.onConnect.bind(this)});\r\n    this.client.onConnectionLost = this.onConnectionLost;\r\n    this.client.onMessageArrived = this.onMessageArrived;\r\n  }\r\n\r\n  render(){\r\n      if(this.props.type === \"login\"){\r\n        return(this.renderLogin())\r\n      }\r\n      if(this.props.type === \"sign-up\"){\r\n        return(this.rendersignup())\r\n      }\r\n      if(this.props.type === \"profile\"){\r\n        return(this.renderProfile())\r\n      }\r\n      if(this.props.type === \"challenges\"){\r\n        return(this.renderGetChallenges())\r\n      }\r\n      if(this.props.type === \"set-challenge\"){\r\n        return(this.renderSetChallenge())\r\n      }\r\n  }\r\n\r\nrenderProfile(){\r\n  if (this.state.mqttConnected === true){\r\n    this.requestProfile();\r\n  }\r\n  if(this.state.user_challenges.length === 0)\r\n  {\r\n    return(\r\n    <div>\r\n    <h2 align=\"middle\" className=\"title\">Loading...</h2>\r\n      <iframe\r\n        style={{\r\n          position: \"relative\",\r\n          top: 0,\r\n          left: 0,\r\n          width: 1080,\r\n          height: 640,\r\n        }}\r\n        src=\"https://www.youtube.com/embed/1svA2sGhDEE\"\r\n        align=\"middle\"\r\n        title=\"Pink Windmill Kids\"\r\n      />\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n  return(\r\n    <div>\r\n        <div className=\"profile_photo\">\r\n          <img alt=\"...\" src={process.env.PUBLIC_URL + '/img/'+this.state.image_name}></img>\r\n        </div>\r\n        <div align=\"middle\" >\r\n          <select onChange={(event) => this.handleImgChange('image_name', event)} id=\"choices\">\r\n            <option value='default-avatar'>Default</option>\r\n            <option value='virus'>Quentin Quarantino</option>\r\n            <option value='skull'>Skully</option>\r\n            <option value='octo'>Dr Octo</option>\r\n            <option value='penguin'>Very Happy Feet</option>\r\n            <a href=\"https://www.freepik.com/free-photos-vectors/christmas\">Christmas vector created by rawpixel.com - www.freepik.com</a>\r\n            <a href=\"https://www.freepik.com/free-photos-vectors/pattern\">Pattern vector created by vectorpocket - www.freepik.com</a>\r\n            <a href=\"https://www.freepik.com/free-photos-vectors/hand\">Hand vector created by sergey_kandakov - www.freepik.com</a>\r\n            <a href=\"https://www.freepik.com/free-photos-vectors/green\">Green photo created by crowf - www.freepik.com</a>\r\n          </select>\r\n        </div>\r\n        <h2 className=\"title\">{global.userName}</h2><br/>\r\n    <h4 className=\"category\">My Stats</h4>\r\n    <div className=\"content\">\r\n      <div className=\"social-description\">\r\n        <h2>{this.state.total_steps}</h2>\r\n        <p>Steps</p>\r\n      </div>\r\n      <div className=\"social-description\">\r\n        <h2>{this.state.remaining_sec}</h2>\r\n        <p>Seconds Lifetime</p>\r\n      </div>\r\n      <div className=\"social-description\">\r\n        <h2>#{this.state.ranking}</h2>\r\n        <p>Ranking</p>\r\n      </div>\r\n    </div>\r\n      <h3 className=\"title\">My Challenges</h3>\r\n      <React.Fragment>\r\n         <div align=\"middle\" class=\"tg-wrap\"><table id=\"ccp\">\r\n         {this.state.user_challenges.map(listitem => (\r\n           <tr>\r\n             <td>{listitem.challenge_name}</td>\r\n             <td>{listitem.description}</td>\r\n             <td>{listitem.step_goal}</td>\r\n             <td>{listitem.end_time}</td>\r\n             <td>{listitem.reward}</td>\r\n           </tr>\r\n         ))}\r\n         </table></div>\r\n      </React.Fragment><br/><br/>\r\n  </div>\r\n\r\n)}\r\n}\r\n\r\ncreateNewProfile(){\r\n  console.log(\"Creating new profile...\");\r\n  var newRequest = {\r\n    type: \"push new profile\",\r\n    user_name: global.userName,\r\n    user_type: this.state.profile_type\r\n  }\r\n  this.requestToServer(JSON.stringify(newRequest));\r\n}\r\n\r\nrequestProfile(){\r\n  if(this.state.total_steps !== 0){\r\n    this.wait(1000);\r\n  }\r\n  console.log(\"Requesting profile...\");\r\n  var newRequest = {\r\n    type: \"pull web profile\",\r\n    user_name: global.userName\r\n  }\r\n  this.requestToServer(JSON.stringify(newRequest));\r\n}\r\n\r\nrendersignup(){\r\n  if(this.state.page_name !== 'sign-up')\r\n  {\r\n    this.setState({page_name: 'sign-up'})\r\n  }\r\n  return(\r\n    <Col className=\"text-center ml-auto mr-auto\" lg=\"6\" md=\"8\">\r\n    <InputGroup>\r\n      <InputGroupAddon addonType=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"now-ui-icons users_circle-08\"></i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <Input\r\n        placeholder=\"User Name...\"\r\n        type=\"text\"\r\n        value={this.state.login_username}\r\n        onChange={(event) => this.loginChange('login_username', event)}\r\n      ></Input>\r\n    </InputGroup>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={this.state.is_sponsor}\r\n      onChange={(event) => this.handleCheckBox('is_sponsor', event)}\r\n    ></input> I am a sponsor\r\n    <div className=\"send-button\">\r\n    {this.redirectToProfile()}\r\n      <Button\r\n        block\r\n        className=\"btn-round\"\r\n        color=\"info\"\r\n        size=\"lg\"\r\n        onClick={this.handleLogin.bind(this)}\r\n      >\r\n      Sign up now\r\n      </Button>\r\n      <div className=\"pull-middle\">\r\n        <h6>\r\n          <a\r\n            className=\"link\"\r\n            href=\"/login-page\"\r\n          >\r\n            Login to existing Account\r\n          </a>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n    </Col>\r\n  )\r\n}\r\n\r\nredirectToProfile(){\r\n  if(this.state.mqttConnected === true && this.state.data_received === true)\r\n  {\r\n    if(this.state.page_name === 'login')\r\n    {\r\n      console.log(\"we're on the login page\")\r\n        if(this.state.account_exists === true)\r\n        {\r\n          console.log(\"redirect changed to true\")\r\n          this.setState({redirect: true})\r\n        }\r\n        if(this.state.account_exists === false)\r\n        {\r\n          this.setState({redirect: false})\r\n        }\r\n    }\r\n    if(this.state.page_name === 'sign-up')\r\n    {\r\n        console.log(\"we're on the sign up page\")\r\n        if(this.state.account_exists === true)\r\n        {\r\n          this.setState({redirect: false})\r\n        }\r\n        if(this.state.account_exists === false)\r\n        {\r\n          this.createNewProfile()\r\n          this.setState({redirect: true})\r\n        }\r\n    }\r\n  }\r\n  if (this.state.redirect) {\r\n    return(\r\n         <Redirect to={{\r\n               pathname: '/profile-page',\r\n           }} />)\r\n  }\r\n}\r\n\r\nhandleLogin()\r\n{\r\n  this.requestProfile()\r\n}\r\n\r\nloginChange(type,event){\r\n  this.setState({[type]: event.target.value});\r\n  global.userName= event.target.value;\r\n}\r\n\r\nhandleChange(type,event) {\r\n   this.setState({[type]: event.target.value});\r\n   console.log('type is: ' + type + ' and value is ' + event.target.value)\r\n}\r\n\r\nhandleCheckBox(type,event) {\r\n  this.setState({[type]: event.target.checked});\r\n  console.log('type is: ' + type + ' and value is ' + event.target.checked)\r\n}\r\n\r\nhandleImgChange(type,event) {\r\n   this.setState({[type]: event.target.value + '.jpg'});\r\n   console.log('type is: ' + type + ' and value is ' + event.target.value)\r\n}\r\n\r\nrenderLogin(){\r\n  if(this.state.page_name !== 'login')\r\n  {\r\n    this.setState({page_name: 'login'})\r\n  }\r\n  return(\r\n    <form >\r\n    <InputGroup\r\n      >\r\n      <InputGroupAddon addonType=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"now-ui-icons users_circle-08\"></i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <Input\r\n        placeholder=\"User Name...\"\r\n        type=\"text\"\r\n        value={this.state.login_username}\r\n        onChange={(event) => this.loginChange('login_username', event)}\r\n      ></Input>\r\n    </InputGroup>\r\n    <InputGroup>\r\n      <InputGroupAddon addonType=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"now-ui-icons text_caps-small\"></i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <Input\r\n        placeholder=\"Password...\"\r\n        type=\"password\"\r\n      ></Input>\r\n    </InputGroup>\r\n    {this.redirectToProfile()}\r\n    <Button\r\n      block\r\n      className=\"btn-round\"\r\n      color=\"info\"\r\n      onClick={this.handleLogin.bind(this)}\r\n      size=\"lg\"\r\n      >    Login\r\n    </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nrequestChallenges(){\r\n  console.log(\"Requesting challenges...\")\r\n  var newRequest1 = {\r\n    type: \"pull all challenges\"\r\n  }\r\n  this.requestToServer(JSON.stringify(newRequest1))\r\n}\r\n\r\nrenderGetChallenges(){\r\n   if(this.state.mqttConnected === true && this.state.challenges_loaded === false){\r\n    this.requestChallenges()\r\n    this.setState({challenges_loaded: true})\r\n  }\r\n  if(this.state.challenge_array.length === 0)\r\n  {\r\n    return <div> <h2> Loading challenges... </h2> </div>\r\n  }\r\n  else{\r\n   return(\r\n     <React.Fragment>\r\n        <div align=\"middle\" class=\"tg-wrap\"><table id=\"ccp\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Description</th>\r\n          <th>Step Goal</th>\r\n          <th>End Date</th>\r\n          <th>Reward</th>\r\n          <th></th>\r\n        </tr>\r\n          {this.state.challenge_array.map(listitem => (\r\n            <tr>\r\n              <td>{listitem.challenge_name}</td>\r\n              <td>{listitem.description}</td>\r\n              <td>{listitem.step_goal}</td>\r\n              <td>{listitem.end_time}</td>\r\n              <td>{listitem.reward}</td>\r\n              <td><Button className=\"submit-button\" onClick={(event) => this.pushSelectedChallenge(event,listitem.challenge_id)} variant=\"outlined\" size=\"large\" color=\"primary\">Accept Challenge</Button></td>\r\n            </tr>\r\n          ))}\r\n        </table></div>\r\n      </React.Fragment>\r\n  );\r\n}\r\n}\r\n\r\npushSelectedChallenge(event,id){\r\nvar selectedChallenge = {\r\n  type: \"push select challenge\",\r\n  user_name: global.userName,\r\n  challenge_id: id\r\n  }\r\n  this.requestToServer(JSON.stringify(selectedChallenge));\r\n  alert(\"You successfully joined this challenge\");\r\n}\r\n\r\nrenderSetChallenge(){\r\nreturn(\r\n    <div>\r\n    <form align=\"left\" onSubmit={this.validateChallengeInput.bind(this)} >\r\n    <label className =\"form-label\">Challenge Name:  </label>\r\n    <input type=\"text\"  value={this.state.challenge_name} onChange={(event) => this.handleChange('challenge_name', event)} /><p/>\r\n    <label className =\"form-label\">Description:  </label>\r\n    <input type=\"text\" className='challenge-textfield' value={this.state.challenge_description} onChange={(event) => this.handleChange('challenge_description', event)} /><p/>\r\n    <label className =\"form-label\">End Date: </label>\r\n    <input type=\"date\"  value={this.state.challenge_end_date} onChange={(event) => this.handleChange('challenge_end_date', event)} /><p/>\r\n    <label className =\"form-label\">Step Goal: </label>\r\n    <input type=\"number\"  value={this.state.challenge_step_goal} onChange={(event) => this.handleChange('challenge_step_goal', event)}/><p/>\r\n    <label className =\"form-label\">User Reward: </label>\r\n    <input type=\"number\"  value={this.state.challenge_reward} onChange={(event) => this.handleChange('challenge_reward', event)}/><p/>\r\n\r\n    <button className=\"submit-button\">Create Challenge</button>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n  validateChallengeInput(event){\r\n    event.preventDefault();\r\n    if(this.state.challenge_name === '' || this.state.challenge_description === '' || this.state.challenge_reward === '' || this.state.challenge_step_goal === ''){\r\n      alert(\"Please complete all fields\");\r\n    }\r\n    else if(this.state.challenge_reward >=0 && this.state.challenge_step_goal >=0){\r\n      this.pushNewChallenge(event);\r\n    }\r\n    else{\r\n      alert(\"Please enter positive numbers\");\r\n    }\r\n  }\r\n\r\n  pushNewChallenge(event){\r\n    console.log(JSON.stringify(this.state.challenge_name));\r\n    console.log(\"Pushing New Challenge\");\r\n    var today = new Date(),\r\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()+'T'+today.getHours()+':'+today.getMinutes()+':'+today.getSeconds()+'.'+today.getMilliseconds()+'Z';\r\n  \tvar newChallenge = {\r\n      type: \"push new challenge\",\r\n      challenge_id: \"C\" + this.makeid(6),\r\n      challenge_name: this.state.challenge_name,\r\n      description: this.state.challenge_description,\r\n      end_time: this.state.challenge_end_date,\r\n      step_goal: this.state.challenge_step_goal,\r\n      reward: this.state.challenge_reward,\r\n      current_time: date\r\n    }\r\n\r\n  \tthis.requestToServer(JSON.stringify(newChallenge));\r\n    alert(\"You successfully created a new challenge\");\r\n  }\r\n\r\n  // called when the client connects\r\n  onConnect() {\r\n    // Once a connection has been made report.\r\n    console.log(\"Connected\");\r\n    this.setState({\r\n    mqttConnected: true\r\n  });\r\n\r\n    // this.state.mqttConnected = true;\r\n  }\r\n  // called when the client connects\r\n  requestToServer(payload) {\r\n    // Once a connection has been made, make a subscription and send a message.\r\n    console.log(\"Request to server\");\r\n    this.client.subscribe(\"doordie_web\");\r\n    var message = new Paho.Message(payload);\r\n    message.destinationName = \"doordie_web\";\r\n    this.client.send(message);\r\n  }\r\n  // called to generate the IDs\r\n  makeid(length) {\r\n     var result           = '';\r\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n     var charactersLength = characters.length;\r\n     for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n     }\r\n     return result;\r\n  }\r\n\r\n  // called when the client loses its connection\r\n  onConnectionLost(responseObject) {\r\n    if (responseObject.errorCode !== 0) {\r\n      console.log(\"Mqtt.onConnectionLost:\"+responseObject.errorMessage);\r\n    }\r\n  }\r\n\r\n  // called when a message arrives\r\n  onMessageArrived(message) {\r\n    console.log(\"Mgtt.onMessageArrived:\"+message.payloadString);\r\n    var json_message = JSON.parse(message.payloadString);\r\n\r\n    if(json_message.type === 'push all challenges'){\r\n      console.log(\"attempt to get array\");\r\n      this.setState({challenge_array: json_message.challenge})\r\n    }\r\n\r\n    if(json_message.type === 'push web profile' && json_message.user_name === global.userName){\r\n      console.log(\"HELLLO\");\r\n      console.log(json_message.hasOwnProperty(\"total_steps\"));\r\n      this.setState({\r\n        total_steps: json_message.total_steps,\r\n        remaining_sec: json_message.remaining_sec,\r\n        account_exists: json_message.hasOwnProperty(\"total_steps\"),\r\n        data_received: true,\r\n        user_challenges: json_message.challenge,\r\n        profile_type: json_message.user_type,\r\n        ranking: Math.max(1, Math.round(8378 -json_message.total_steps +this.state.dummy_counter/3,0)), //dummy formula: so that it looks like your ranking changes when the step count goes up\r\n        dummy_counter: this.state.dummy_counter + 1\r\n      })\r\n    }\r\n}\r\n\r\n  //wait function called after sever request, to avoid spaming the server\r\n  wait(ms){\r\n   var start = new Date().getTime();\r\n   var end = start;\r\n   while(end < start + ms) {\r\n     end = new Date().getTime();\r\n  }\r\n  }\r\n\r\n}\r\nexport default Mqtt;\r\n"]},"metadata":{},"sourceType":"module"}