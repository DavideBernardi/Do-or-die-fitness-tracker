{"ast":null,"code":"// Create a client instance, we create a random id so the broker will allow multiple sessions\nimport React from \"react\";\nimport jQuery from 'jquery';\nimport Paho from 'paho-mqtt';\n\nclass Mqtt extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {value: ''};\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n\n    var client = new Paho.Client(\"broker.mqttdashboard.com\", 8000, \"clientId\" + Mqtt.makeid(3));\n    client.connect({\n      onSuccess: this.onConnect\n    }); // set callback handlers\n    // client.onConnectionLost = Mqtt.onConnectionLost;\n    // client.onMessageArrived = Mqtt.onMessageArrived;\n  } // called when the client connects\n\n\n  onConnect() {\n    // Once a connection has been made report.\n    console.log(\"Connected\");\n  }\n\n}\n\nexport default Mqtt;","map":{"version":3,"sources":["C:/Users/chrib/Dropbox/Studium/5. Bristol/8.Software_Eng/Github/now-ui-kit-react-master/src/views/examples/MQTTclient.js"],"names":["React","jQuery","Paho","Mqtt","Component","constructor","props","client","Client","makeid","connect","onSuccess","onConnect","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;;AACA,QAAIC,MAAM,GAAG,IAAIL,IAAI,CAACM,MAAT,CAAgB,0BAAhB,EAA4C,IAA5C,EAAkD,aAAaL,IAAI,CAACM,MAAL,CAAY,CAAZ,CAA/D,CAAb;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe;AAACC,MAAAA,SAAS,EAAE,KAAKC;AAAjB,KAAf,EANiB,CAOjB;AACA;AACA;AACD,GAZgC,CAcjC;;;AACAA,EAAAA,SAAS,GAAG;AACV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAlBgC;;AAuBnC,eAAeX,IAAf","sourcesContent":["// Create a client instance, we create a random id so the broker will allow multiple sessions\nimport React from \"react\";\nimport jQuery from 'jquery';\nimport Paho from 'paho-mqtt';\n\n\nclass Mqtt extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.state = {value: ''};\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    var client = new Paho.Client(\"broker.mqttdashboard.com\", 8000, \"clientId\" + Mqtt.makeid(3) );\n    client.connect({onSuccess: this.onConnect});\n    // set callback handlers\n    // client.onConnectionLost = Mqtt.onConnectionLost;\n    // client.onMessageArrived = Mqtt.onMessageArrived;\n  }\n\n  // called when the client connects\n  onConnect() {\n    // Once a connection has been made report.\n    console.log(\"Connected\");\n  }\n\n\n\n}\nexport default Mqtt;\n"]},"metadata":{},"sourceType":"module"}